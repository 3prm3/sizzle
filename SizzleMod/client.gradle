task clientJar(type: Jar) {
    from "${project.buildDir}/classes/java/main"
    from "${project.buildDir}/resources/main"
    from configurations.embed.collect { it.isDirectory() ? it : zipTree( it ) }

    manifest {
        attributes( [
            "Specification-Title"     : "Sizzle",
            "Specification-Vendor"    : "DodoGang",
            "Specification-Version"   : "${ version }",
            "Implementation-Title"    : project.ext.implName,
            "Implementation-Version"  : "${ version }",
            "Implementation-Vendor"   : "DodoGang",
            "Implementation-Timestamp": new Date().format( "yyyy-MM-dd'T'HH:mm:ssZ" )
        ] )
    }

    appendix = "client"

    exclude( "net/dodogang/sizzle/server/**" )
    exclude( "net/dodogang/sizzle/data/**" )
}

task signClientJar( dependsOn: 'reobfClientJar' ) {
    doLast {
        project.ext.sign( clientJar.archivePath )
    }
}

def reobfClientJar = project.reobf.create('clientJar')
reobfClientJar.dependsOn('createMcpToSrg')
reobfClientJar.setMappings(tasks.createMcpToSrg.getOutput())

project.shade.create("clientJar")
